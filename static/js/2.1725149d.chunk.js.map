{"version":3,"sources":["store/hooks.ts","store/reducer.ts","api/commands.ts","components/utils/Flex.tsx","utils/hooks/general.ts","api/hooks.ts","store/actions.ts","api/client.ts","api/utils.ts","config/config.ts","storage/storage.ts","assets/wave.svg","api/auth.ts","components/pages/Login/styles.ts","components/pages/Login/trans.ts","assets/verifed.svg","components/pages/Login/index.tsx"],"names":["useStore","stateFn","context","useContext","StoreContext","useMemo","useDispatch","useRef","action","console","log","type","payload","setStore","state","changes","currentAccount","preferences","backgroundTheme","reduceState","current","AccountInfo","account_id","flags","rooms","friends","checkType","status","data","checkField","contact","created_at","Date","Command","AccountChange","JSON","stringify","AccountList","included","volume","AccountLogin","token","RoomInfo","room_id","accounts","RoomCreate","label","invite","AccountGetSuggestions","Flex","props","reducedProps","_props","args","key","includes","reduceProps","style","Object","freeze","display","rootEl","rootComponent","React","createElement","cloneElement","onClick","className","children","useForkedState","fn","ref","signal","useSignal","value","setState","val","useEffect","useRestrictedPage","condition","path","history","useHistory","push","useRestrictedPageForCurrentAccount","useState","updateState","useCallback","HOST_URL","config","host_url","cli","Client","useCommand","command","a","_args","execute","rq","useDispatchCommand","useAccount","updateStore","options","undefined","dispatchStore","dispatchCommand","id","contacts","accountInfoRq","setCurrentAccount","useRoom","roomInfoRq","updateCurrentAccount","setBackgroundTheme","theme","url","this","entries","map","e","join","Promise","resolve","reject","once","cmd","exec","makeArguments","reqUrl","headers","Headers","fetch","mode","then","response","json","parsed_response","catch","isLoaded","request","arrayToStringList","arr","toString","replace","name","t","Array","isArray","types","Error","obj","field","setLocalStorageValue","localStorage","setItem","resetLocalStorageValue","removeItem","signInWithPopup","provider","firebase","GoogleAuthProvider","addScope","result","fetchAccountIdToken","error","errorCode","code","errorMessage","message","signInWithCredentials","email","password","signInWithEmailAndPassword","currentUser","getIdToken","idToken","signUpWithCredentials","createUserWithEmailAndPassword","signOut","useStyles","makeStyles","root","minHeight","alignItems","breakpoints","up","container","maxWidth","values","md","width","padding","spacing","inputWrapper","loginImage","height","position","right","bottom","imgContainer","overflow","background","palette","primary","dark","main","wave","zIndex","left","footerWrapper","margin","translations","preset","title","en_US","pl_PL","de_DE","yes","Login","useLittera","translated","classes","emailInput","setEmailInput","passwordInput","setPasswordInput","errorMsg","setErrorMsg","isLoading","setIsLoading","handleLogin","user","uid","account","handleInputChange","inputName","event","newValue","target","src","alt","waveAsset","justifyContent","Typography","variant","paragraph","onSubmit","preventDefault","err","flexDirection","TextField","marginBottom","onChange","Alert","severity","AlertTitle","Button","color","Fab","aria-label","Icon","align","Backdrop","open","CircularProgress"],"mappings":"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","file":"static/js/2.1725149d.chunk.js","sourcesContent":["import { useContext, useRef, useMemo } from \"react\"\nimport { StoreContext, IState } from \"./context\";\nimport { reduceState } from \"./reducer\";\n\n/**\n * Access Store variables.\n * @param stateFn Callback providing Store state.\n * @example const myValue = useStore(state => state.myValue);\n */\nexport const useStore = <T>(stateFn: (state: IState) => T) => {\n    const context = useContext(StoreContext);\n\n    return useMemo(() => stateFn(context[0]), [context, stateFn]);\n}\n\nexport type StoreAction<T=any> = { type: string, payload?: T }\n\n/**\n * Returns dispatch method for Store.\n * @example \n * const dispatch = useDispatch();\n * ...\n * dispatch({ type: \"ACTION_NAME\", payload: \"changes\" });\n */\nexport const useDispatch = () => {\n    const context = useContext(StoreContext);\n\n    const ref = useRef(<T=any>(action: StoreAction<T>) => {\n        console.log(\"📁\", action.type, \"=>\", action.payload);\n        reduceState(context[1], action)\n    });\n\n    return ref.current;\n}","import { IState } from \"./context\";\nimport { StoreAction } from \"./hooks\";\n\nexport const reduceState = (setStore: React.Dispatch<React.SetStateAction<IState>>, action: StoreAction) => {\n    setStore((state: IState) => {\n        const changes: Partial<IState> = {};\n        \n        // Add actions here!\n        // ! This might seem a little complicated but some refactoring might help.\n        switch(action.type) {\n            case \"SET_CURRENT_ACCOUNT\":\n                changes.currentAccount = {...action.payload};\n                break;\n\n            case \"SET_BACKGROUND_THEME\":\n                // TODO: Make sure to initialize preferences before accessing reducer...\n                if (!changes.preferences) changes.preferences = {};\n                // @ts-ignore\n                changes.preferences.backgroundTheme = { ...action.payload } as { id: string, url: string, label: string }\n                break;\n        }\n\n        return {...state, ...changes}\n    });\n}","import { Command } from \"./client\";\nimport { IAccount } from \"types\";\nimport { checkField, checkType } from \"./utils\";\n\nexport class AccountInfo extends Command {\n    constructor(account_id: string, flags?: boolean, rooms?: boolean, friends?: boolean) {\n        super([\"account-accountInfo\", { account_id, flags: !!flags, rooms: !!rooms, friends: !!friends }]);\n\n        checkType(\"account_id\", account_id, \"string\");\n\n        checkType(\"flags\", flags, \"boolean\", \"undefined\");\n        checkType(\"rooms\", rooms, \"boolean\", \"undefined\");\n        checkType(\"friends\", friends, \"boolean\", \"undefined\");\n    }\n\n    parse(status: number, data: IAccount): IAccount {\n        if(status !== 200) return data;\n\n        checkType(\"data\", data, \"object\");\n\n        checkField(data, \"id\", \"string\");\n        checkField(data, \"label\", \"string\");\n        checkField(data, \"created_at\", \"string\");\n        checkField(data, \"avatar_url\", \"string\", \"undefined\");\n\n        checkField(data, \"contact\", \"object\");\n        if (data.contact)\n            checkField(data.contact, \"email\", \"string\");\n\n        checkField(data, \"details\", \"object\");\n        checkField(data, \"flags\", \"object\", \"undefined\");\n        checkField(data, \"friends\", \"array\", \"undefined\");\n        checkField(data, \"rooms\", \"array\", \"undefined\");\n        \n        return { ...data, created_at: new Date(data.created_at) };\n    }\n}\n\nexport class AccountChange extends Command {\n    constructor(account_id: string, changes: { label?: string, name?: string, surname?: string }) {\n        super([\"account-accountChange\", {account_id, changes: JSON.stringify(changes)}]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountList extends Command {\n    constructor(included?: string[], volume?: number) {\n        super([\"account-accountList\", { volume, included }]);\n\n        checkType(\"volume\", volume, \"number\", \"undefined\");\n        checkType(\"included\", included, \"array\", \"undefined\");\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountCreate extends Command {\n    constructor(data: {email: string, password: string, label?: string}) {\n        super([\"account-accountCreate\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountLogin extends Command {\n    constructor(token: string) {\n        super([\"account-accountLogin\", { token }]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountFind extends Command {\n    constructor(data: { email?: string, label?: string }) {\n        super([\"account-accountFind\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountAddContact extends Command {\n    constructor(data: {account_id: string, contact_id: string}) {\n        super([\"account-accountAddContact\", data]);\n    }   \n    \n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n        \n        return data;\n    }\n}\n\nexport class RoomInfo extends Command {\n    constructor(room_id: string, accounts?: boolean) {\n        super([\"room-roomInfo\", { room_id, accounts }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class RoomCreate extends Command {\n    constructor(account_id: string, label: string, invite: string[]) {\n        super([\"room-roomCreate\", { label, invite: [...invite, account_id] }]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountGetSuggestions extends Command{\n    // deepcode ignore no-any: Type declaration of 'any' loses type-safety\n    constructor(account_id: string){\n        super([\"account-accountGetSuggestions\", {account_id}]);\n    };\n\n    parse(status: number, data: any){\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n\n}\n","import React from \"react\";\n\ntype FlexAlignType =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'stretch'\n  | 'baseline'\n\ntype FlexProperties = {\n  inline?: boolean\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse'\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  alignContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'stretch'\n    | 'space-between'\n    | 'space-around'\n  alignItems?: FlexAlignType\n}\n\ntype FlexProps = {\n  children: React.ReactNode\n  className?: string\n  onClick?: () => void\n  rootComponent?: React.Component\n  style?: object\n  width?: number | string\n  height?: number | string\n} & FlexProperties\n\nconst reduceProps = (props: FlexProps, ...args: string[]) => {\n    let _props = {...props};\n\n    for(var key in _props) {\n        // @ts-ignore\n        if(args.includes(key)) delete _props[key];\n    }\n\n    return _props;\n}\n\n/**\n * A component for easier flex-box implementation.\n * @example <Flex justifyContent=\"space-between\" alignItems=\"center\">...</Flex>\n */\nconst Flex = (props: FlexProps) => {\n  const reducedProps = reduceProps(props, \"children\", \"className\");\n\n  const style = Object.freeze({\n      display: \"flex\",\n      ...reducedProps,\n      ...props.style\n  });\n\n  const rootEl = props.rootComponent ?? React.createElement(\"div\");\n\n  return React.cloneElement(rootEl as React.ReactElement<any>, { onClick: props.onClick, style, className: props.className, children: props.children });\n}\n\nexport default Flex;","import { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useStore } from \"store/hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useForkedState = <T extends any[], R>(fn: (...args: T) => R, ...args: T) => {\n    const ref = useRef(null as unknown as [R, (value: R) => void]);\n    const signal = useSignal();\n\n    if(ref.current === null) {\n        const value: R = fn(...args);\n        const setState = (val: R) => { ref.current[0] = val; signal(); }\n\n        ref.current = [ value, setState ];\n    }\n\n    useEffect(() => { \n        const value = fn(...args);\n\n        if(ref.current[0] !== value) \n            ref.current[1](value); \n    }, [fn, args]);\n\n    return ref.current;\n}\n\n/**\n * Redirect to page if condition met\n * @param path for redirect\n * @param condition\n */\nexport const useRestrictedPage = (condition: boolean, path: string = \"/home\" ) => {\n    const history = useHistory();\n    useEffect(() => {\n        if (condition) \n            history.push(path)\n        \n    }, [condition, path, history]);\n}\n\n/**\n * Redirect to page if current account is active\n * @param path for redirect\n */\nexport const useRestrictedPageForCurrentAccount = (path: string = \"/home\") => {\n    const currentAccount = useStore(state => state.currentAccount);\n    useRestrictedPage(!!currentAccount, path)\n}\n\n\n\nexport const useSignal = () => {\n    const [, updateState] = useState();\n    // @ts-ignore\n    return useCallback(() => updateState({}), []);\n}\n","import { useRef, useEffect } from 'react';\nimport { Client } from './client';\nimport { useSignal } from '../utils/hooks/general';\nimport config from '../config/config';\nimport { IAccount, IRoom } from 'types';\nimport { AccountInfo, RoomInfo } from './commands';\nimport { useStore, useDispatch } from 'store/hooks';\nimport { setCurrentAccount } from 'store/actions';\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\nexport const useCommand = (command: any, ...args: any[]) => {\n    const ref = useRef(null as unknown as { status: number, data?: any, message?: string });\n    const signal = useSignal();\n\n    useEffect(() => {\n        ref.current = { status: 102 };\n        \n        const fn = async () => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            ref.current = rq;\n            signal();\n        }\n        fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return ref.current;\n}\n\n/**\n * \n * @param command \n * @param args \n * @example\n * const dispatchCommand = useDispatchCommand();\n * ...\n * dispatchCommand(AccountCreate, \"mike.eling97@gmail.com\", \"ThisIsMyPassBro\")\n */\nexport const useDispatchCommand = () => {\n    const ref = useRef(null as unknown as (command: any, ...args: any[]) => Promise<{ status: number, data: any }>);\n    const signal = useSignal();\n    \n    if(ref.current === null) {\n        \n        const fn = async (command: any, ...args: any[]) => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            signal();\n            return rq;\n        }\n        ref.current = (command: any, ...args: any[]) => fn(command, ...args);\n    }\n    \n    return ref.current;\n}\n\nexport const useAccount = (account_id?: string, updateStore: boolean = false, options?: { rooms?: boolean, flags?: boolean, contacts?: boolean }) => {\n    const currentAccount = useStore(state => state.currentAccount);\n    const ref = useRef<IAccount | null | undefined>(!account_id ? currentAccount ?? undefined : undefined);\n    const dispatchStore = useDispatch();\n    const dispatchCommand = useDispatchCommand();\n    const signal = useSignal();\n\n    useEffect(() => {\n        const fn = async () => {\n            const accountInfoRq = (await dispatchCommand(AccountInfo, account_id || currentAccount?.id, options?.flags, options?.rooms, options?.contacts ));\n    \n            if(accountInfoRq.status === 200) {\n                ref.current = accountInfoRq.data as IAccount | null;\n                if(updateStore) dispatchStore(setCurrentAccount(accountInfoRq.data));\n                signal();\n            }\n        }\n    \n        if(account_id || currentAccount?.id)\n            fn();\n            \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account_id]);\n    \n    return ref.current ?? null;\n}\n\nexport const useRoom = (room_id: string, accounts?: boolean) => {\n    const ref = useRef<IRoom | null | undefined>();\n    const dispatchCommand = useDispatchCommand();\n    const signal = useSignal();\n\n    useEffect(() => {\n        const fn = async () => {\n            const roomInfoRq = (await dispatchCommand(RoomInfo, room_id, !!accounts));\n\n            if(roomInfoRq.status === 200) {\n                ref.current = roomInfoRq.data as IRoom | null;\n                signal();\n            }\n        }\n\n        if(room_id) fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [room_id]);\n    \n    return ref.current ?? null;\n}","import { IAccount } from \"types\";\nimport config from \"config/config\";\nimport { AccountInfo } from \"api/commands\";\nimport { Client } from \"api/client\";\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\n/**\n * Set current account.\n * @param payload Account info.\n * @see api/commands/AccountInfo\n */\nexport const setCurrentAccount = (payload: IAccount | null) => {\n    return ({ type: \"SET_CURRENT_ACCOUNT\", payload });\n}\n\n/**\n * Update current account.\n * @param payload account_id\n * @see api/commands/AccountInfo\n */\nexport const updateCurrentAccount = async (account_id: string) => {\n    const rq = await cli.execute(new AccountInfo(account_id, true, true, true))\n\n    const payload: IAccount = rq.data;\n\n    return ({ type: \"SET_CURRENT_ACCOUNT\", payload });\n}\n\n/**\n * Set background theme.\n * @param theme \n */\nexport const setBackgroundTheme = (theme: { id: string, url: string, label: string }) => {\n    return ({ type: \"SET_BACKGROUND_THEME\", payload: theme });\n}","export type TResponse = {status: number, message?: string, data: any};\n\nexport interface IClient {\n    url: string\n}\n\nexport class Client implements IClient {\n    url: string\n\n    constructor(url: string) {\n        this.url = url;\n    }\n\n    makeArguments(args: {[key: string]: string}) {\n        return Object.entries(args).map((e => `${e[0]}=${typeof e[1] === \"object\" ? JSON.stringify(e[1]) : e[1]}`)).join(\"&\");\n    }\n\n    execute(command: ICommand) {\n        return new Promise<{status: number, data: any}>((resolve, reject) => {\n            let once = false;\n            const cmd = command.exec[0];\n            const args = this.makeArguments(command.exec[1]);\n    \n            const reqUrl = `${this.url}${cmd}?${args}`;\n\n            const handleResolve = (response: any) => {\n                if(!once) {\n                    once = true;\n                    \n                    const parsed_response = response\n                    \n                    console.log(\"📶\", cmd, \"=>\", parsed_response);\n                    resolve(parsed_response);\n                }\n                \n            }\n\n            let headers = new Headers({\n                'Access-Control-Allow-Origin':'*',\n                'Content-Type': 'multipart/form-data'\n            });\n\n            fetch(reqUrl, { mode: \"cors\", headers })\n                .then(response => response.json())\n                .then(handleResolve)\n                .catch(reject);\n        })\n    }\n}\n\n\nexport interface ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    parse(status: number, data: any): any\n}\n\nexport class Command implements ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    constructor(exec: [string, {[key: string]: any}]) {\n        this.exec = exec;\n        this.status = 0;\n    }\n\n    parse(status: number, data: any) {\n        return data;\n    }\n}","export const isLoaded = (request: any) => {\n    return request !== null && request.status !== 102\n}\n\nconst arrayToStringList = (arr: string[]) => \n        arr.toString().replace(/,/g, \", \")\n\ntype TType = \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\" | \"null\" | \"array\";\n\n/**\n * Throws an exception if the types are not correct.\n * @param name \n * @param value \n * @param types \n */\nexport const checkType = (name: string, value: any, ...types: TType[]) => {\n    let t: TType = typeof value;\n\n    if (t === \"object\")\n        if (value === null)\n            t = \"null\";\n        else if (Array.isArray(value))\n            t = \"array\";\n\n    if (!types.includes(t))\n        throw new Error(`Expected ${arrayToStringList(types)} for ${name}, got ${typeof value}`)\n\n    return value;\n}\n\n/**\n * Same as checkType but accepts an parent object.\n * @param obj \n * @param field \n * @param types \n */\nexport const checkField = <T, K extends keyof T>(obj: T, field: K, ...types: TType[]) => {\n    let val = obj[field];\n    checkType(field as string, val, ...types);\n    return val;\n}","const config = {\n    host_url: \"https://us-central1-ping-82fee.cloudfunctions.net/\" //\"http://localhost:5001/ping-82fee/us-central1/\" //\n};\n\nexport default config;","export interface IStorage {\n    accountIdToken?: string;\n}\n\nexport const getLocalStorageValue = (key: keyof IStorage) => {\n    const storage = localStorage as unknown as IStorage;\n\n    return storage[key];\n}\n\nexport const getLocalStorage = () => {\n    return localStorage as unknown as IStorage;\n}\n\nexport const setLocalStorageValue = (key: keyof IStorage, value: string) => {\n    localStorage.setItem(key, value);\n}\n\nexport const resetLocalStorageValue = (key: keyof IStorage) => {\n    localStorage.removeItem(key);\n}","export default __webpack_public_path__ + \"static/media/wave.f70c3bfc.svg\";","import * as firebase from \"firebase/app\";\nimport { messaging } from \"config/firebase\";\nimport { setLocalStorageValue } from \"storage/storage\";\n\nexport const signInWithPopup = async () => {\n    return new Promise((resolve, reject) => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n        \n       firebase.auth().signInWithPopup(provider).then(function(result) {\n            fetchAccountIdToken();\n            resolve(result);\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n            reject(error);\n            // ...\n          });\n          \n    });\n}\n\nexport const signInWithCredentials = async (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n       firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                fetchAccountIdToken();\n                resolve(result);\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const fetchAccountIdToken = () => {\n    const currentUser = firebase.auth()?.currentUser ?? null;\n\n    if(currentUser)\n        currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\n            console.log(idToken);\n            setLocalStorageValue(\"accountIdToken\", idToken);\n        }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n        });\n}\n\nexport const signUpWithCredentials = async (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n       firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                resolve(result);\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const signOut = async () => {\n    return new Promise((resolve, reject) => {\n       firebase.auth().signOut()\n            .then((result) => {\n                resolve(result);\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const getCurrentUserIdToken = async () => {\n    return new Promise<string>((resolve, reject) => {\n        firebase.auth()?.currentUser?.getIdToken(true).then(function(idToken) {\n            resolve(idToken);\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 User Id Token =>\", errorCode, errorMessage);\n            reject(error);\n          });\n    });\n}\n\n// TODO: Implement!\nexport const getDeviceToken = async () => {\n    return new Promise<string>((resolve, reject) => {\n        // Get Instance ID token. Initially this makes a network call, once retrieved\n        // subsequent calls to getToken will return from cache.\n        messaging.getToken().then((currentToken) => {\n            if (currentToken) {\n                resolve(currentToken)\n            } else {\n                console.log(\"🔒 Device Token =>\", \"No Instance ID token available. Request permission to generate one.\");\n                reject(new Error(\"No Instance ID token available. Request permission to generate one.\"));\n            }\n        }).catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Device Token =>\", errorCode, errorMessage);\n            reject(error);\n        });\n  \n    });\n}\n\n// export function getAccessToken() {\n//     return new Promise(function(resolve, reject) {\n//       const key = require('../placeholders/service-account.json');\n//       const jwtClient = new google.auth.JWT(\n//         key.client_email,\n//         null,\n//         key.private_key,\n//         SCOPES,\n//         null\n//       );\n//       jwtClient.authorize(function(err, tokens) {\n//         if (err) {\n//           reject(err);\n//           return;\n//         }\n//         resolve(tokens.access_token);\n//       });\n//     });\n//   }","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      minHeight: \"calc(100vh - (300px + 42px))\",\n      alignItems: \"center\",\n      //paddingTop: \"60px\"\n      [theme.breakpoints.up(\"sm\")]: {\n        minHeight: \"calc(100vh - (350px + 42px))\",\n        alignItems: \"flex-start\"\n      },\n    },\n    container: {\n      maxWidth: theme.breakpoints.values.md,\n      width: \"100%\",\n      padding: `0 ${theme.spacing(4)}px`,\n    },\n    inputWrapper: {\n\n    },\n    loginImage : {\n      width: \"auto\",\n      height: \"240px\",\n      position: \"absolute\",\n      right: \"2%\",\n      bottom: \"0px\",\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"310px\",\n        bottom: \"5px\"\n      },\n    },\n    imgContainer : {\n      height: \"300px\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      background: `linear-gradient(to top left, ${theme.palette.primary.dark}, ${theme.palette.primary.main})`,\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"350px\"\n      },\n    },\n    wave: {\n      position: \"absolute\",\n      zIndex: 5,\n      bottom: \"-10%\",\n      left: \"-1%\",\n      width: \"102%\",\n      height: \"auto\"\n    },\n    footerWrapper: {\n      maxWidth: theme.breakpoints.values.md,\n      margin: \"0 auto\",\n      padding: `0 ${theme.spacing(4)}px`,\n    }\n    \n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Sign in\",\n        pl_PL: \"Bądź w kontakcie!\",\n        de_DE: \"Stayen ins Touchejen\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","export default __webpack_public_path__ + \"static/media/verifed.465bf5bf.svg\";","import React, { useState } from 'react';\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Button, TextField, Typography, Fab, Icon, CircularProgress, Backdrop } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Flex from \"components/utils/Flex\";\nimport loginImage from \"assets/verifed.svg\";\nimport waveAsset from \"assets/wave.svg\";\nimport { signInWithCredentials, signInWithPopup } from \"api/auth\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useDispatchCommand } from \"api/hooks\";\nimport { AccountInfo } from \"api/commands\";\nimport { useDispatch } from \"store/hooks\";\nimport { setCurrentAccount } from \"store/actions\";\nimport { useRestrictedPageForCurrentAccount } from 'utils/hooks/general';\n\n// TODO: Translations...?\n\n/**\n * Login page component.\n */\nconst Login = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n    const dispatchCommand = useDispatchCommand();\n    const dispatchStore = useDispatch();\n\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false)\n\n    useRestrictedPageForCurrentAccount();\n\n    const handleLogin = async (result: any) => {\n        const account = await dispatchCommand(AccountInfo, result?.user?.uid || \"\", true);\n\n        if (account.status === 200) {\n            //const accountIdToken = await getCurrentUserIdToken();\n\n            // ! Remember account id token.\n            //storageSetter(\"accountIdToken\", accountIdToken ?? \"\");\n            dispatchStore(setCurrentAccount(account.data));\n\n            if (account.data?.flags?.includes(\"needs_init\"))\n            {\n                history.push(\"/welcome\");\n            } else {\n                // TODO: Save device_token.\n                // const device_token = await getDeviceToken();\n                history.push(\"/home\");\n\n            }\n        } else if(account.status === 404) {\n            // TODO: Account not found! What shall be done then?\n            setErrorMsg(\"Account not found!\");\n        }\n        if(account.status !== 0) setIsLoading(false);\n    }\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setErrorMsg(\"\");\n        setIsLoading(true)\n\n        if (!isLoading) {\n            const email = emailInput;\n            const password = passwordInput;\n            signInWithCredentials(email, password).then(handleLogin).catch(err => {\n                setErrorMsg(err.message);\n                setIsLoading(false);\n            });\n        }\n    }\n\n    const handlePopupLogin = () => {\n        setErrorMsg(\"\");\n        setIsLoading(true);\n        signInWithPopup()\n            .then(handleLogin)\n            .catch((error) => {\n                setErrorMsg(error.message);\n                setIsLoading(false);\n            });\n\n    }\n\n    const handleInputChange = (inputName: string) => (event: React.FormEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        // @ts-ignore\n        const newValue = event?.target?.value ?? \"\";\n\n        if (!isLoading) {\n            if (inputName === \"email\") setEmailInput(newValue);\n            if (inputName === \"password\") setPasswordInput(newValue);\n        }\n    }\n    \n    const handleBack = () => {\n        history.push(\"/signup\");\n    }\n\n    return <div style={{ width: \"100%\" }}>\n\n        <div className={classes.imgContainer}>\n            <img className={classes.loginImage} src={loginImage} alt=\"loginImage\" />\n            <img className={classes.wave} src={waveAsset} alt=\"\" />\n        </div>\n\n\n        <Flex justifyContent=\"center\" width=\"100%\" className={classes.root}>\n            <div className={classes.container}>\n                <Typography variant=\"h3\" paragraph>\n                    {translated.title}\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Flex className={classes.inputWrapper} flexDirection=\"column\">\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"email-input\" value={emailInput} onChange={handleInputChange(\"email\")} type=\"email\" label=\"E-Mail\" variant=\"outlined\" />\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"password-input\" value={passwordInput} onChange={handleInputChange(\"password\")} type=\"password\" label=\"Password\" variant=\"outlined\" />\n                    </Flex>\n\n                    {errorMsg && <Alert style={{ margin: \"10px 0\" }} severity=\"error\">\n                        <AlertTitle>Upps...</AlertTitle>\n                        {errorMsg}\n                    </Alert>}\n\n                    <Flex justifyContent=\"space-between\">\n                        <Button onClick={handleBack} color=\"primary\" type=\"button\">Sign Up</Button>\n                        <Fab color=\"primary\" aria-label=\"add\" type=\"submit\">\n                            <Icon style={{ color: \"white\" }}>keyboard_arrow_right</Icon>\n                        </Fab>\n                    </Flex>\n\n                </form>\n                <Button onClick={handlePopupLogin} type=\"button\">Login with Google!</Button>\n            </div>\n        </Flex>\n        <Flex className={classes.footerWrapper} alignItems=\"center\" justifyContent=\"flex-end\" height=\"42px\">\n            <Typography align=\"right\">Forgot password?</Typography>\n        </Flex>\n\n        {!isLoading ? null :\n            <Backdrop open={true} style={{zIndex:5}}>\n                <CircularProgress color=\"primary\" />\n            </Backdrop>}\n\n    </div>\n}\n\n\n\nexport default Login;"],"sourceRoot":""}