{"version":3,"sources":["store/context.ts","config/firebase.ts","components/common/BottomNav/index.tsx","Routes.tsx","config/theme.ts","utils/hooks/locale.ts","store/StoreProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["INITIAL_STATE","Object","freeze","currentAccount","undefined","preferences","backgroundTheme","StoreContext","React","createContext","firebaseApp","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","database","auth","usePublicVapidKey","useStyles","makeStyles","root","bottom","position","width","boxShadow","TABS","BottomNav","visible","history","useHistory","location","useLocation","classes","useState","indexOf","pathname","split","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","onClick","push","label","icon","homeSubpages","HomeLazy","lazy","LoginLazy","IntroLazy","SplashLazy","WelcomeLazy","SignupLazy","Routes","bottomNavVisible","RegExp","join","test","useEffect","state","initialPath","fallback","exact","path","component","Button","variant","theme","createMuiTheme","palette","primary","main","secondary","background","default","spacing","overrides","MuiCssBaseline","html","WebkitFontSmoothing","LOCALES","PRESET","yes","en_US","pl_PL","de_DE","no","StoreProvider","children","initialState","Provider","App","useLocale","language","setLanguage","preset","ThemeProvider","CssBaseline","maxSnack","basename","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","scope","err"],"mappings":"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","file":"static/js/main.688cc880.chunk.js","sourcesContent":["import React from \"react\";\nimport { IAccount } from \"types\";\n\nexport interface IPreferences {\n    backgroundTheme: { id: string, url: string, label: string }\n}\n\nexport interface IState {\n    currentAccount?: IAccount;\n    preferences: Partial<IPreferences> | {};\n}\n\nexport const INITIAL_STATE: IState = Object.freeze({\n    currentAccount: undefined,\n    preferences: {\n        backgroundTheme: null\n    }\n})\n\n/**\n * Our holy Store!\n */\nexport const StoreContext = React.createContext<[IState, React.Dispatch<React.SetStateAction<IState>>]>([INITIAL_STATE, () => {}]);","import * as firebase from 'firebase/app';\n \nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/messaging';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID,\n});\n\nconst database = firebaseApp.database();\nconst auth = firebaseApp.auth();\nconst messaging = firebaseApp.messaging();\n\nmessaging.usePublicVapidKey(\"BFpEHR0UHDMxqVkWLbe884ukhegFUVl-SPUGpDaG2PG9BaQMr5BmNeq3BAyzMfqMD-kiJV-dwQKEDcubgNMRozw\");\n\nexport { messaging, database, auth, firebaseApp as app };","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        bottom: \"0\",\n        position: \"fixed\",\n        width: \"100%\",\n        boxShadow: \"0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)\"\n    },\n  });\n\n  const TABS = [\"highlights\", \"rooms\", \"people\"];\n  \n/**\n *\n * @deprecated or might be used for mobile in the future.\n */\n  const BottomNav = ({visible}:{visible: boolean}) => {\n    const history = useHistory();\n    const location = useLocation();\n    const classes = useStyles();\n    const [value, setValue] = React.useState(TABS.indexOf(location.pathname.split(\"/\")[2]) || 0);\n    if (visible) return null; // Temporarily disable BottomNav.\n    if (!visible) return null;\n\n    return <div>\n\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction onClick={() => history.push(\"/home/highlights\")} label=\"Highlights\" icon={<HomeIcon />} />\n      <BottomNavigationAction onClick={() => history.push(\"/home/rooms\")} label=\"Rooms\" icon={<ForumIcon />} />\n      <BottomNavigationAction onClick={() => history.push(\"/home/people\")} label=\"People\" icon={<GroupIcon />} />\n    </BottomNavigation>\n\n    </div>\n}\n\n\nexport default BottomNav;\n","import React, { Suspense, useEffect } from 'react';\nimport { Switch, Route, useLocation, useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport BottomNav from 'components/common/BottomNav';\n\nconst homeSubpages = [ \"highlights\", \"rooms\", \"people\" ];\n\nconst HomeLazy = React.lazy(() => import(\"components/pages/Home/\"))\nconst LoginLazy = React.lazy(() => import(\"components/pages/Login/\"))\nconst IntroLazy = React.lazy(() => import(\"components/pages/Intro/\"))\nconst SplashLazy = React.lazy(() => import(\"components/pages/Splash/\"))\nconst WelcomeLazy = React.lazy(() => import(\"components/pages/Welcome/\"))\nconst SignupLazy = React.lazy(() => import(\"components/pages/Signup/\"))\n\nfunction Routes() {\n  const history = useHistory();\n  const location = useLocation();\n\n  // Show BottomNav only when on home screen.\n  const bottomNavVisible = new RegExp(homeSubpages.join(\"|\")).test(location.pathname);\n  \n\n  useEffect(() => {\n    if(location.pathname !== \"/\") {\n      history.push({pathname: \"/\", state:{ initialPath: location.pathname }});\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  return (\n  <>\n      <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n          <Route exact path=\"/\" component={SplashLazy} />\n          <Route exact path=\"/intro\" component={IntroLazy} />\n          <Route exact path=\"/signup\" component={SignupLazy} />\n          <Route exact path=\"/welcome\" component={WelcomeLazy} />\n          <Route exact path=\"/login\" component={LoginLazy} />\n          <Route path=\"/home\" component={HomeLazy} />\n\n          {/* TODO: Move to a file... */}\n          <Route exact component={() => <div>Error page <br/> <Button variant=\"contained\" onClick={() => history.push(\"/\")}>Reload</Button></div>} />\n      </Switch>\n      </Suspense>\n    <BottomNav visible={bottomNavVisible} />\n  </>\n  );\n}\n\nexport default Routes;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#449ee2\"\n        },\n        secondary: {\n            main: \"#99d8ff\"\n        },\n        background: {\n            default: \"#FAFAFA\"\n        }\n    },\n    spacing: 4,\n    overrides: {\n        MuiCssBaseline: {\n            '@global': {\n                html: {\n                    WebkitFontSmoothing: 'auto',\n                },\n            },\n        },\n    },\n});\n\nexport default theme;","import {useState} from \"react\";\n\nconst LOCALES = Object.freeze([ \"en_US\", \"pl_PL\", \"de_DE\" ]);\n\nconst PRESET = Object.freeze({\n    yes: {\n        en_US: \"Yes\",\n        pl_PL: \"Tak\",\n        de_DE: \"Ja\"\n    },\n    no: {\n        en_US: \"No\",\n        pl_PL: \"Nie\",\n        de_DE: \"Nein\"\n    }\n});\n\nexport const useLocale = () => {\n    const [locale, setLocale] = useState(LOCALES[0]);\n\n    return [locale, setLocale, PRESET];\n}","import React, { useState } from \"react\";\nimport { StoreContext, IState, INITIAL_STATE } from \"./context\";\n\n\ntype StoreProviderProps = {\n    children: JSX.Element;\n    initialState?: IState\n}\n\n/**\n * React component providing Store context.\n */\nconst StoreProvider = ({ children, initialState }: StoreProviderProps) => {\n    const [value, setValue] = useState<IState>(initialState ?? INITIAL_STATE);\n\n    return <StoreContext.Provider value={[value, setValue]}>\n        {children}\n    </StoreContext.Provider>\n}\n\nexport default StoreProvider;","import React from 'react';\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport LitteraProvider from \"react-littera\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Routes from './Routes';\nimport theme from \"./config/theme\";\nimport { useLocale } from './utils/hooks/locale';\nimport StoreProvider from 'store/StoreProvider';\nimport { SnackbarProvider } from 'notistack';\n\n\nfunction App() {\n  const [language, setLanguage, preset] = useLocale();\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <LitteraProvider language={language} setLanguage={setLanguage} preset={preset}>\n          <SnackbarProvider maxSnack={3}>\n            <Router basename={process.env.REACT_APP_BASENAME ?? \"/\"}>\n              <Routes />\n            </Router>\n          </SnackbarProvider>\n        </LitteraProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./config/firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}"],"sourceRoot":""}